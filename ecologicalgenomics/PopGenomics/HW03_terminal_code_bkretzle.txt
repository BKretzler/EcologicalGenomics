# Bailey Kretzler
# Ecological Genomics
# Fall 2021
# Homework 3 command line code
##########################################################

########################
# defining reference
# individuals
########################
CHR="ChrXX"  # Be sure to customize to your chromosome number!!!

echo $CHR  # Does it look right?

# make new directory for results:

mkdir LAI

cd LAI/

mkdir Admixed

# Run R interactively at the commandline:

R

# Import K=5 Admixture run
Qscores <- read.table("/data/project_data/PopGenomics/shared/poplar_hybrids.LDpruned.5.Q", sep=" ",header=F)
names(Qscores) = c("K1","K2","K3","K4","K5")

# Import meta-data
meta <- read.table("/data/project_data/PopGenomics/Combined_Transect_Sampling_Data_2020.txt",sep="\t",header=T)

# Combine them 
merged <- cbind(meta,Qscores)
str(merged)

# run loop for assigning global ancestry from admixutre analysis
# if mostly K4 = balsamifera
# if mostly combo of K1,K2,and K5 -> trichocarpa
# if mostly K3 = PopSpp, we ignore this
# everything not assigned is admixed
for(i in 1:nrow(merged)){
if(merged$K4[i]>=0.99){
    merged$Anc[i]="Bals"
    }else if (sum(c(merged$K1[i],merged$K2[i],merged$K5[i]))>=0.99){
    merged$Anc[i]="Tricho"
    } else if(merged$K3[i]>0.5){
    merged$Anc[i]="PopSpp"
    }else{
    merged$Anc[i]="Admx"
    }
}

# convert to a table
table(merged$Anc)

#extract balsamifera individuals and write to file
Bals_Inds_Ref <- merged[merged$Anc=="Bals",1]  
length(Bals_Inds_Ref) # Should be 46 
write.table(Bals_Inds_Ref, "Balsam.Inds", quote=F, row.names=F, col.names=F)

#extract trichocarpa individuals and write to file
Tricho_Inds_Ref <- merged[merged$Anc=="Tricho",1]
length(Tricho_Inds_Ref) # Should net you 80 individuals
write.table(Tricho_Inds_Ref, "Tricho.Inds", quote=F, row.names=F, col.names=F)

#extract admixed individuals and write to file
Admixed_Inds <- merged[merged$Anc=="Admx",1]
length(Admixed_Inds) # Should net you 442 individuals
write.table(Admixed_Inds, "Admixed.Inds", quote=F, row.names=F, col.names=F)

quit() #quit R session and return to command line

########################
# convert files to vcf
# using vcftools
########################

# convert Bals.Inds to vcf file

vcftools --vcf /data/project_data/PopGenomics/shared/${CHR}_sweeps/${CHR}.recode.vcf --keep Balsam.Inds --recode --stdout | gzip -c >poplar_hybrids.maf05.${CHR}.BalsRef.vcf.gz

# convert Tricho.Inds to vcf file

vcftools --vcf /data/project_data/PopGenomics/shared/${CHR}_sweeps/${CHR}.recode.vcf --keep Tricho.Inds --recode --stdout | gzip -c >poplar_hybrids.maf05.${CHR}.TrichoRef.vcf.gz

# convert Admixed.Inds to vcf file in a screen 
	# takes a while
	
screen

CHR="Chr18"  

# while read loop to generated vcf for Admixed individuals
#subsets orignal vcf by inds of interest outputs to new file
# file is compressed to vcf.gz (gzipped vcf)

while read ID
do
  vcftools --gzvcf /data/project_data/PopGenomics/shared/${CHR}_sweeps/${CHR}.recode.vcf \
  --indv $ID \
  --recode \
  --stdout | gzip -c   >Admixed/poplar_hybrids.maf05.${CHR}.${ID}.vcf.gz
done < Admixed.Inds


########################
# Run loter analysis
########################

### DO THIS IN A SCREEN ###

screen

#set working directory and define chromosome
cd /data/project_data/PopGenomics/shared/Chr18_sweeps/LAI

CHR="Chr18"


# Make a new dir to store the results:
mkdir Loter_out


# while read loop to match sample ID from admixed file to 
# corresponding vcf file and do loter anlaysis for local 
# ancestry inference (LAI)

while read ID
do
for file in Admixed/poplar_hybrids.maf05.${CHR}.${ID}.vcf.gz
do
loter_cli -r poplar_hybrids.maf05.${CHR}.BalsRef.vcf.gz poplar_hybrids.maf05.${CHR}.TrichoRef.vcf.gz \
-a $file \
-f vcf \
-o Loter_out/${ID}_LAI.txt \
-n 1 \
-pc -v
done
done < Admixed.Inds


########################
# convert loter output
# from haploid to diploid
# and get in plink format
########################

# From within  LAI/ directory:

CHR="Chr18"

# calculates and stores the number of SNP sites for your chromosome
Nsites=`tail -n +2 ${CHR}.kept.sites | wc -l | sed 's/\s/\t/' | cut -f1` 

echo $Nsites # For Chr18, Nsites=208375 SNPs

# calculates and stores the number of admixed individuals you previously identified
Ninds=`wc -l Admixed.Inds | sed 's/\s/\t/' | cut -f1` 

echo $Ninds  # Should be 442 individuals

## use datamash to convert from haploid to diploid

# creates container file
touch ${CHR}_matrix.diploid

#runs a loop through each file
#then calculates a sum for each column across rows
#from 1 to total number of sites
#take in file your loop through
# >> indicates append output to bottom of the file
for file in Loter_out/*.txt
do
datamash --field-separator=" " sum 1-${Nsites} <$file >>${CHR}_matrix.diploid
done

## Now we want to transpose this
#replaces space with tabs (\s to \t)
#does this globaly (\g) for your file
#pipe to cut out the ??
# goes through all sites and transposes 
#outputs to a new file
sed 's/\s/\t/g' ${CHR}_matrix.diploid | cut -f1-${Nsites} | datamash transpose >${CHR}_matrix.diploid.tr

## rangle data matrix to plink format

#creates a variable for each snp (snp ID)
seq -f "snp%02g" 1 $Nsites >sites

#repeats A for the number of sites as "dummy" var
printf 'A\n%.0s' $(seq $Nsites) >allele1  # Create a dummy column of 'A' the length of your Nsites file

#Same as above but for T
printf "T\n%.0s" $(seq $Nsites) >allele2 # Create a dummy column of 'T' the length of your Nsites file

# makes new directory to store file and results
mkdir Plink

# paste to bind columns together
# Output new column
paste sites allele1 allele2 ${CHR}_matrix.diploid.tr >Plink/${CHR}_matrix.diploid.tr.forPlink

## create file with sample ids called a fam file
# sets family as transect 
# next is sample ID
# rest are just dummy variables 

# first one opens meta data and passes through pipe
#cuts our first two files
#grep to search for IDs contained within admixed inds (442 admixed IDs) - match as whole word
#append to Fam file
cat /data/project_data/PopGenomics/Combined_Transect_Sampling_Data_2020.txt | \
cut -f1-2 | \
grep -w -f Admixed.Inds - | \
cut -f2 | \
paste - Admixed.Inds >FID_IID

printf '0\t0\t0\t-9\n%.0s' $(seq $Ninds) >dummy

paste FID_IID dummy  >Plink/${CHR}_fam.forPlink

########################
# First run of plink
# for calculating LAI
########################
## This runs the Plink conversion from allele dosages to bed format

# cd to plink directory
cd Plink/ 

# convert formats
plink2 --import-dosage ${CHR}_matrix.diploid.tr.forPlink noheader \
--fam ${CHR}_fam.forPlink \
--make-bed \
--out ${CHR}_Admixed_FAI

# calculate the LAI frequencies

plink2 --bfile ${CHR}_Admixed_FAI --freq --out ${CHR}_LAI_freq

########################
# Setting up phenotype 
# data for plink
########################

CHR="Chr18"

cd /data/project_data/PopGenomics/shared/${CHR}_sweeps/LAI/

# Get phenotype data from meta file for the admixed samples:

tail -n +2 /data/project_data/PopGenomics/VT_Garden_Phenotypes_2021.txt | \
grep -w -f Admixed.Inds - >Admixed.pheno


#family ID, individual ID, rust, flush, and set (columns)
#append header to file
printf "#FID\tIID\tRUST\tFLUSH\tSET\n%.0s" >Plink/pheno.forPlink

#append data to file below header
cat Admixed.pheno >>Plink/pheno.forPlink

########################
#Setting up climate data
# for plink
########################

#name chromosome
CHR="Chr18"


# cd to workign directory
cd /data/project_data/PopGenomics/shared/${CHR}_sweeps/LAI/

# Get phenotype data from meta file for the admixed samples:

tail -n +2 /data/project_data/PopGenomics/climDat.txt | \
grep -w -f Admixed.Inds - >Admixed.clim


#family ID, individual ID, final, GDD, and CDD (columns)
#append header to file
printf "#FID\tIID\tFINAL\tGDD\tCDD\n%.0s" >Plink/clim.forPlink

#append data to file below header
cat Admixed.clim >>Plink/clim.forPlink


########################
# create admixture 
# covariate matrix 
# for plink
########################

# Get K=2 ADMIX to use as covariate; Need to use tail -n +2 to skip the header in the metadata file before pasting to the Q file

# grab meta data
# grab just transect column
# paste with other daa
# add just admixed ones
# replace space with tabs
# output is file admixed_kbals

tail -n +2 /data/project_data/PopGenomics/Combined_Transect_Sampling_Data_2020.txt | \
cut -f1 | \
paste - /data/project_data/PopGenomics/shared/poplar_hybrids.LDpruned.5.Q | \
grep -w -f Admixed.Inds - | \
sed 's/\s/\t/g' | \
cut -f 1,5 >Plink/Admixed_KBals

# grab individual ids
# of just the admixed individuals 
cat /data/project_data/PopGenomics/Combined_Transect_Sampling_Data_2020.txt | \
cut -f1-2 | \
grep -w -f Admixed.Inds - | \
sed 's/\s/\t/g' | \
cut -f2 >Plink/Transect

# Create the cov file with KBals

#pring header to file 
#then all the actual data - meta data from admixed inds plus ID
printf "#FID\tIID\tK2Q\n%.0s" >Plink/cov.forPlink
paste Plink/Transect Plink/Admixed_KBals >>Plink/cov.forPlink

#########################
# Running Plink Analysis
#########################

cd Plink/

## for climate data
plink2 --bfile ${CHR}_Admixed_FAI \
--pheno clim.forPlink \
--covar cov.forPlink \
--glm omit-ref


## for phenotype data
plink2 --bfile ${CHR}_Admixed_FAI \
--pheno pheno.forPlink \
--covar cov.forPlink \
--glm omit-ref

##### REMAINDER OF ANALYSIS DONE IN R #####